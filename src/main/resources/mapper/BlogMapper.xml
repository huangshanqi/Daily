<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hsq.daily.dao.BlogDao">

	<resultMap type="Blog" id="BLOG_MAP">
		<id property="id" column="id" />
		<result property="createTime" column="create_time" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="userId" column="user_id" />
		<result property="categoryId" column="category_id" />
	</resultMap>

	<insert id="create" parameterType="Blog" keyProperty="id"
		useGeneratedKeys="true">
		insert into
		blog(create_time,title,content,user_id,category_id)
		values(#{createTime},#{title},#{content},#{userId},#{categoryId})
	</insert>

	<select id="findById" parameterType="int" resultMap="BLOG_MAP">
		select *
		from blog
		where id = #{id}
		limit 1
	</select>

	<delete id="deleteById" parameterType="int">
		delete from blog
		where id = #{id}
	</delete>
	
	<update id="update" parameterType="Blog">
	update blog
	set create_time = #{createTime},title = #{title},content = #{content}
	where id = #{id}
	</update>

	<select id="getUserAllBlog" parameterType="int" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{userId}
		order by create_time desc
	</select>
	
	<select id="getUserBlogByPage" parameterType="Page" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{condition.userId}
		order by create_time desc
		limit #{offset},#{pageSize}
	</select>

	<select id="getUserBlogByCategoryId" parameterType="Page" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{condition.userId} and category_id = #{condition.categoryId}
		order by create_time desc
	</select>
	
	<select id="getUserBlogByCategoryIdByPage" parameterType="Page" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{condition.userId} and category_id = #{condition.categoryId}
		order by create_time desc
		limit #{offset},#{pageSize}
	</select>

	<select id="getUserBlogByTag" parameterType="Page" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{condition.userId}
		blog_id in(
		select blog_id
		from blog_tag
		where tag_id = #{condition.tagId}
		)
	</select>

	<select id="getUserBlogByTagByPage" parameterType="Page" resultMap="BLOG_MAP">
		select * from blog
		where user_id = #{condition.userId}
		blog_id in(
		select blog_id
		from blog_tag
		where tag_id =
		#{condition.tagId}
		)
		limit #{offset},#{pageSize}
	</select>

</mapper>